{"version":3,"file":"static/js/266.8be7d535.chunk.js","mappings":"sSAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACqBC,MAAM,GAAD,OAC1BH,EAD0B,sCACYC,IAFtC,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,oBACUP,IAFpC,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCD,GAArC,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,4BACkBP,IAF5C,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCF,GAAlC,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,4BACkBP,IAF5C,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFAEqBT,MAAM,GAAD,OAC1BH,EAD0B,gCACMC,EADN,kBACuBW,IAHjD,cAECR,EAFD,gBAKkBA,EAAYC,OAL9B,cAKCC,EALD,yBAMEA,GANF,kE,oHCfP,MAhBA,YAA4C,IAAdO,EAAa,EAAbA,UACpBC,EAA6BD,EAA7BC,cAAeC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACxBC,EAJc,oDAIaH,EAEjC,OACE,yBACE,UAAC,KAAD,CAAMI,GAAE,kBAAaF,GAArB,WACE,gBAAKG,IAAKF,EAAUG,IAAKL,KACzB,wBAAKA,QAIZ,ECDD,MAbA,YAAyC,IACjCM,EADgC,EAAdC,WACEC,QAC1B,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAAC,EAAD,CAAmCZ,UAAWY,GAArBA,EAAMT,GADhB,KAKtB,ECOD,MAhBA,WACE,OAA4CU,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACR3B,EAAAA,EAAAA,MAAsB4B,MAAK,SAAAxB,GACzBsB,EAAkBtB,EACnB,GACF,GAAE,KAGD,yBACGqB,IAAkB,SAAC,EAAD,CAAgBL,WAAYK,KAGpD,C,sBClBD,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOV,KAAKK,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["api/fetchFromApi.js","components/TrendingMoviesItem/TrendingMoviesItem.jsx","components/TrendingMovies/TrendingMovies.jsx","pages/HomePage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2f202abcab3fe0934220a17698275697';\n\nexport async function fetchTrendingMovies() {\n  const fetchedData = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieReviewsById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieCastById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieByQuery(query) {\n\n  const fetchedData = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst IMAGE_BASEURL = 'https://www.themoviedb.org/t/p/w220_and_h330_face';\n\nfunction TrendingMoviesItem({ movieData }) {\n  const { backdrop_path, title, id } = movieData;\n  const imageUrl = IMAGE_BASEURL + backdrop_path;\n\n  return (\n    <li>\n      <Link to={`/movies/${id}`}>\n        <img src={imageUrl} alt={title} />\n        <h2>{title}</h2>\n      </Link>\n    </li>\n  );\n}\n\nTrendingMoviesItem.propTypes = { movieData: PropTypes.object.isRequired };\n\nexport default TrendingMoviesItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TrendingMoviesItem from 'components/TrendingMoviesItem/TrendingMoviesItem';\n\nfunction TrendingMovies({ moviesData }) {\n  const movies = moviesData.results;\n  return (\n    <ul>\n      {movies.map(movie => (\n        <TrendingMoviesItem key={movie.id} movieData={movie} />\n      ))}\n    </ul>\n  );\n}\n\nTrendingMovies.propTypes = { moviesData: PropTypes.object.isRequired };\n\nexport default TrendingMovies;\n","import React, { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'api/fetchFromApi';\nimport TrendingMovies from 'components/TrendingMovies/TrendingMovies';\n\nfunction HomePage() {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(response => {\n      setTrendingMovies(response);\n    });\n  }, []);\n\n  return (\n    <div>\n      {trendingMovies && <TrendingMovies moviesData={trendingMovies} />}\n    </div>\n  );\n}\n\nexport default HomePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","fetch","fetchedData","json","response","fetchMovieById","movieId","fetchMovieReviewsById","fetchMovieCastById","fetchMovieByQuery","query","movieData","backdrop_path","title","id","imageUrl","to","src","alt","movies","moviesData","results","map","movie","useState","trendingMovies","setTrendingMovies","useEffect","then","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}