{"version":3,"file":"static/js/463.cce546a7.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACqBC,MAAM,GAAD,OAC1BH,EAD0B,sCACYC,IAFtC,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,oBACUP,IAFpC,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCD,GAArC,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,4BACkBP,IAF5C,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCF,GAAlC,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,4BACkBP,IAF5C,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gFAELC,QAAQC,IAAIC,EAAAA,EAAAA,IAAA,UAAaf,EAAb,iCAA8CC,EAA9C,kBAA+DW,KAFtE,SAGqBG,EAAAA,EAAAA,IAAA,UAAaf,EAAb,iCAA8CC,EAA9C,kBAA+DW,IAHpF,cAGCR,EAHD,OAINS,QAAQC,IAAIV,EAAYY,MAJlB,SAKkBZ,EAAYY,KAL9B,cAKCV,EALD,yBAaEA,GAbF,kE,sICCP,MAjCA,YAAmC,IAC3BW,EAD0B,EAAZC,SACED,KACtB,OACE,8BACGA,EAAKE,OAAS,GACb,wBACGF,EAAKG,KAAI,SAAAC,GACR,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,aAAcC,EAAcJ,EAAdI,UAC1BC,EAAWF,GACbG,EAAAA,EAAAA,GAAYH,GACZI,EAEJ,OACE,2BACE,gBAAKC,IAAKH,EAAUI,IAAKP,KACzB,0BACGE,EADH,KACgBF,EADhB,SAFOD,EAOZ,OAGH,2CAIP,EChBD,MAXA,WACE,OAA0CS,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACQzB,GAAY0B,EAAAA,EAAAA,MAAZ1B,QAMR,OAJA2B,EAAAA,EAAAA,YAAU,YACRzB,EAAAA,EAAAA,IAAmBF,GAAS4B,MAAK,SAAA9B,GAAQ,OAAI2B,EAAiB3B,EAArB,GAC1C,GAAE,CAACE,KAEG,8BAAGwB,IAAiB,SAAC,EAAD,CAAYd,SAAUc,KAClD,C,sDCdD,IAGaL,EAAc,SAAAD,GAAQ,MAHP,oDAGiCA,CAA1B,C","sources":["api/fetchFromApi.js","components/CastRender/CastRender.jsx","pages/Cast/Cast.jsx","utils/getImageUrl.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2f202abcab3fe0934220a17698275697';\n\nexport async function fetchTrendingMovies() {\n  const fetchedData = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieReviewsById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieCastById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieByQuery(query) {\n\n  console.log(axios.get(`${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`))\n  const fetchedData = await axios.get(`${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`)\n console.log(fetchedData.data);\n  const response = await fetchedData.data\n\n  // const fetchedData = await fetch(\n  //   `${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`\n  // );\n  // console.log(fetchedData);\n  // const response = await fetchedData.json();\n  // console.log(response)\n  return response;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getimageUrl } from 'utils/getImageUrl';\nimport notFound from './notFound.png';\n\nfunction CastRender({ castData }) {\n  const cast = castData.cast;\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(actor => {\n            const { id, name, profile_path, character } = actor;\n            const imageUrl = profile_path\n              ? getimageUrl(profile_path)\n              : notFound;\n\n            return (\n              <li key={id}>\n                <img src={imageUrl} alt={name} />\n                <h3>\n                  {character} ({name})\n                </h3>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No Cast Found!</p>\n      )}\n    </>\n  );\n}\n\nCastRender.propTypes = {\n  castData: PropTypes.object.isRequired,\n};\n\nexport default CastRender;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCastById } from 'api/fetchFromApi';\nimport CastRender from 'components/CastRender/CastRender';\n\nfunction Cast() {\n  const [movieCastData, setMovieCastData] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCastById(movieId).then(response => setMovieCastData(response));\n  }, [movieId]);\n\n  return <>{movieCastData && <CastRender castData={movieCastData} />}</>;\n}\n\nexport default Cast;\n","const IMAGE_BASEURL_SMALL = 'https://www.themoviedb.org/t/p/w220_and_h330_face';\nconst IMAGE_BASEURL_BIG = 'https://image.tmdb.org/t/p/w500/';\n\nexport const getimageUrl = imageUrl => IMAGE_BASEURL_SMALL + imageUrl;\nexport const getBigImageUrl = imageUrl => IMAGE_BASEURL_BIG + imageUrl;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","fetch","fetchedData","json","response","fetchMovieById","movieId","fetchMovieReviewsById","fetchMovieCastById","fetchMovieByQuery","query","console","log","axios","data","cast","castData","length","map","actor","id","name","profile_path","character","imageUrl","getimageUrl","notFound","src","alt","useState","movieCastData","setMovieCastData","useParams","useEffect","then"],"sourceRoot":""}