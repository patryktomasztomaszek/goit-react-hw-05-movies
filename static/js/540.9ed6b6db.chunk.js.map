{"version":3,"file":"static/js/540.9ed6b6db.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACqBC,MAAM,GAAD,OAC1BH,EAD0B,sCACYC,IAFtC,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,oBACUP,IAFpC,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCD,GAArC,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,4BACkBP,IAF5C,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCF,GAAlC,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,4BACkBP,IAF5C,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gFAELC,QAAQC,IAAIC,EAAAA,EAAAA,IAAA,UAAaf,EAAb,iCAA8CC,EAA9C,kBAA+DW,KAFtE,SAGqBG,EAAAA,EAAAA,IAAA,UAAaf,EAAb,iCAA8CC,EAA9C,kBAA+DW,IAHpF,cAGCR,EAHD,OAINS,QAAQC,IAAIV,EAAYY,MAJlB,SAKkBZ,EAAYY,KAL9B,cAKCV,EALD,yBAaEA,GAbF,kE,sICfP,MAhBA,YAAwC,IAAdW,EAAa,EAAbA,UAChBC,EAA6BD,EAA7BC,cAAeC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GACxBC,EAJc,oDAIaH,EAEjC,OACE,yBACE,UAAC,KAAD,CAAMI,GAAE,kBAAaF,GAArB,WACE,gBAAKG,IAAKF,EAAUG,IAAKL,KACzB,wBAAKA,QAIZ,ECMD,MApBA,YAAqC,IAAfM,EAAc,EAAdA,WACdC,EAASD,EAAWE,QAE1B,OADAd,QAAQC,IAAIW,IAEV,8BACGC,EAAOE,OAAS,GACf,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAAC,EAAD,CAA+Bb,UAAWa,GAArBA,EAAMV,GADZ,OAKnB,8CAIP,E,SC0BD,MAxCA,WACE,OAAwCW,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAYMC,GAAkBC,EAAAA,EAAAA,cAAW,iBAAC,oGAE1B1B,EAAQuB,EAAaI,IAAI,UAFC,iCAIJ5B,EAAAA,EAAAA,IAAkBC,GAJd,OAIxBR,EAJwB,OAK9B6B,EAAgB7B,GALc,uDAQhCS,QAAQ2B,MAAR,MARgC,yDAUjC,CAACL,IAMJ,OAJAM,EAAAA,EAAAA,YAAU,WACRJ,GACD,GAAE,CAACA,KAGF,iCACE,iBAAMK,SA5BW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,OAAOC,MAAMC,MACtC,GAAmB,OAAfH,GAAoD,OAA7BA,EAAWI,MAAM,QAC1C,OAAOC,MAAM,sBAEfd,EAAgB,CAAExB,MAAOiC,IACzBF,EAAMQ,cAAcC,OACrB,EAoBG,UACE,kBAAOC,KAAK,YAEbrB,IAAgB,SAAC,EAAD,CAAYP,WAAYO,MAG9C,C","sources":["api/fetchFromApi.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2f202abcab3fe0934220a17698275697';\n\nexport async function fetchTrendingMovies() {\n  const fetchedData = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieReviewsById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieCastById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieByQuery(query) {\n\n  console.log(axios.get(`${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`))\n  const fetchedData = await axios.get(`${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`)\n console.log(fetchedData.data);\n  const response = await fetchedData.data\n\n  // const fetchedData = await fetch(\n  //   `${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`\n  // );\n  // console.log(fetchedData);\n  // const response = await fetchedData.json();\n  // console.log(response)\n  return response;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst IMAGE_BASEURL = 'https://www.themoviedb.org/t/p/w220_and_h330_face';\n\nfunction MoviesListItem({ movieData }) {\n  const { backdrop_path, title, id } = movieData;\n  const imageUrl = IMAGE_BASEURL + backdrop_path;\n\n  return (\n    <li>\n      <Link to={`/movies/${id}`}>\n        <img src={imageUrl} alt={title} />\n        <h2>{title}</h2>\n      </Link>\n    </li>\n  );\n}\n\nMoviesListItem.propTypes = { movieData: PropTypes.object.isRequired };\n\nexport default MoviesListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoviesListItem from 'components/MoviesListItem/MoviesListItem';\n\nfunction MoviesList({ moviesData }) {\n  const movies = moviesData.results;\n  console.log(moviesData);\n  return (\n    <>\n      {movies.length > 0 ? (\n        <ul>\n          {movies.map(movie => (\n            <MoviesListItem key={movie.id} movieData={movie} />\n          ))}\n        </ul>\n      ) : (\n        <p>No results found!</p>\n      )}\n    </>\n  );\n}\n\nMoviesList.propTypes = { moviesData: PropTypes.object.isRequired };\n\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport React from 'react';\nimport { useState, useCallback, useEffect } from 'react';\nimport { fetchMovieByQuery } from '../api/fetchFromApi';\nimport { useSearchParams } from 'react-router-dom';\n\nfunction MoviesPage() {\n  const [searchResult, setSearchResult] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const inputQuery = event.target.input.value;\n    if (inputQuery === null || inputQuery.match(/^ *$/) !== null) {\n      return alert('Type in something!');\n    }\n    setSearchParams({ query: inputQuery });\n    event.currentTarget.reset();\n  };\n\n  const fetchMoviesData = useCallback(async () => {\n    try {\n      const query = searchParams.get('query');\n      if (query) {\n        const fetchedData = await fetchMovieByQuery(query);\n        setSearchResult(fetchedData);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    fetchMoviesData();\n  }, [fetchMoviesData]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input name=\"input\" />\n      </form>\n      {searchResult && <MoviesList moviesData={searchResult} />}\n    </>\n  );\n}\n\nexport default MoviesPage;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","fetch","fetchedData","json","response","fetchMovieById","movieId","fetchMovieReviewsById","fetchMovieCastById","fetchMovieByQuery","query","console","log","axios","data","movieData","backdrop_path","title","id","imageUrl","to","src","alt","moviesData","movies","results","length","map","movie","useState","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","fetchMoviesData","useCallback","get","error","useEffect","onSubmit","event","preventDefault","inputQuery","target","input","value","match","alert","currentTarget","reset","name"],"sourceRoot":""}