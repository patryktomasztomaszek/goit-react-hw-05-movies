{"version":3,"file":"static/js/56.aa0e7a36.chunk.js","mappings":"8SAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACqBC,MAAM,GAAD,OAC1BH,EAD0B,sCACYC,IAFtC,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,oBACUP,IAFpC,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCD,GAArC,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,4BACkBP,IAF5C,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCF,GAAlC,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,4BACkBP,IAF5C,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gFAELC,QAAQC,IAAIC,EAAAA,EAAAA,IAAA,UAAaf,EAAb,iCAA8CC,EAA9C,kBAA+DW,KAFtE,SAGqBG,EAAAA,EAAAA,IAAA,UAAaf,EAAb,iCAA8CC,EAA9C,kBAA+DW,IAHpF,cAGCR,EAHD,OAINS,QAAQC,IAAIV,EAAYY,MAJlB,SAKkBZ,EAAYY,KAL9B,cAKCV,EALD,yBAaEA,GAbF,kE,qICEP,MAjCA,YAAsC,IAAdW,EAAa,EAAbA,UACdC,EAAyDD,EAAzDC,cAAeC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,aAAcC,EAAqBJ,EAArBI,SAEtCC,EAF2DL,EAAXM,OCNjBC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IACRC,KAAK,MDQrCC,GAAWC,EAAAA,EAAAA,GAAYX,GACvBY,EAAYC,KAAKC,MAAqB,GAAfZ,GAAqB,IAElD,OACE,iCACE,4BACE,0BACE,gBAAKa,IAAKL,EAAUM,IAAKf,OAE3B,4BACE,wBAAKA,KACL,yCAAiBW,MACjB,sCACA,uBAAIT,KACJ,oCACA,uBAAIC,WAGR,4BACE,SAAC,KAAD,CAAMa,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,yBAEF,SAAC,KAAD,MAGL,EEXD,MAjBA,WACE,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOnB,EAAP,KAAkBoB,EAAlB,KAEQ7B,GAAY8B,EAAAA,EAAAA,MAAZ9B,QAQR,OANA+B,EAAAA,EAAAA,YAAU,YACRhC,EAAAA,EAAAA,IAAeC,GAASgC,MAAK,SAAAlC,GAC3B+B,EAAa/B,EACd,GACF,GAAE,CAACE,KAEG,4BACD,SAAC,KAAD,CAAM2B,GAAG,IAAT,qBAEHlB,IAAa,SAAC,EAAD,CAAcA,UAAWA,MAC1C,C,sDCtBD,IAGaY,EAAc,SAAAD,GAAQ,MAHP,oDAGiCA,CAA1B,C","sources":["api/fetchFromApi.js","components/MovieDetails/MovieDetails.jsx","utils/getGenresNames.js","pages/MovieDetailsPage/MovieDetailsPage.jsx","utils/getImageUrl.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2f202abcab3fe0934220a17698275697';\n\nexport async function fetchTrendingMovies() {\n  const fetchedData = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieReviewsById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieCastById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieByQuery(query) {\n\n  console.log(axios.get(`${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`))\n  const fetchedData = await axios.get(`${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`)\n console.log(fetchedData.data);\n  const response = await fetchedData.data\n\n  // const fetchedData = await fetch(\n  //   `${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`\n  // );\n  // console.log(fetchedData);\n  // const response = await fetchedData.json();\n  // console.log(response)\n  return response;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getGenresNames } from 'utils/getGenresNames';\nimport { getimageUrl } from 'utils/getImageUrl';\nimport { Link, Outlet } from 'react-router-dom';\n\nfunction MovieDetails({ movieData }) {\n  const { backdrop_path, title, vote_average, overview, genres } = movieData;\n\n  const genresNames = getGenresNames(genres);\n  const imageUrl = getimageUrl(backdrop_path);\n  const userScore = Math.floor(vote_average * 10) + '%';\n\n  return (\n    <>\n      <div>\n        <div>\n          <img src={imageUrl} alt={title} />\n        </div>\n        <div>\n          <h2>{title}</h2>\n          <h3>User Score: {userScore}</h3>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genresNames}</p>\n        </div>\n      </div>\n      <div>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </div>\n      <Outlet />\n    </>\n  );\n}\n\nMovieDetails.propTypes = { movieData: PropTypes.object.isRequired };\n\nexport default MovieDetails;\n","export const getGenresNames = genresArray => {\n  const genresNamesArray = genresArray.map(genre => genre.name);\n  const genresString = genresNamesArray.join(', ');\n  return genresString;\n};\n","import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { fetchMovieById } from 'api/fetchFromApi';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport MovieDetails from '../../components/MovieDetails/MovieDetails';\n\nfunction MovieDetailsPage() {\n  const [movieData, setmovieData] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(response => {\n      setmovieData(response);\n    });\n  }, [movieId]);\n\n  return <div>\n        <Link to='/'>Go back</Link>\n\n    {movieData && <MovieDetails movieData={movieData} />}</div>;\n}\n\nexport default MovieDetailsPage;\n","const IMAGE_BASEURL_SMALL = 'https://www.themoviedb.org/t/p/w220_and_h330_face';\nconst IMAGE_BASEURL_BIG = 'https://image.tmdb.org/t/p/w500/';\n\nexport const getimageUrl = imageUrl => IMAGE_BASEURL_SMALL + imageUrl;\nexport const getBigImageUrl = imageUrl => IMAGE_BASEURL_BIG + imageUrl;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","fetch","fetchedData","json","response","fetchMovieById","movieId","fetchMovieReviewsById","fetchMovieCastById","fetchMovieByQuery","query","console","log","axios","data","movieData","backdrop_path","title","vote_average","overview","genresNames","genres","map","genre","name","join","imageUrl","getimageUrl","userScore","Math","floor","src","alt","to","useState","setmovieData","useParams","useEffect","then"],"sourceRoot":""}