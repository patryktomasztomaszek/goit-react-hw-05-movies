{"version":3,"file":"static/js/540.a72e8949.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/fetchFromApi.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2f202abcab3fe0934220a17698275697';\n\nexport async function fetchTrendingMovies() {\n  const fetchedData = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieReviewsById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieCastById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const fetchedData = await fetch(\n    `${BASE_URL}/search/movie/?api_key=${API_KEY}&query=${query}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst IMAGE_BASEURL = 'https://www.themoviedb.org/t/p/w220_and_h330_face';\n\nfunction MoviesListItem({ movieData }) {\n  const { backdrop_path, title, id } = movieData;\n  const imageUrl = IMAGE_BASEURL + backdrop_path;\n\n  return (\n    <li>\n      <Link to={`/movies/${id}`}>\n        <img src={imageUrl} alt={title} />\n        <h2>{title}</h2>\n      </Link>\n    </li>\n  );\n}\n\nMoviesListItem.propTypes = { movieData: PropTypes.object.isRequired };\n\nexport default MoviesListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoviesListItem from 'components/MoviesListItem/MoviesListItem';\n\nfunction MoviesList({ moviesData }) {\n  const movies = moviesData.results;\n  return (\n    <>\n      {movies.length > 0 ? (\n        <ul>\n          {movies.map(movie => (\n            <MoviesListItem key={movie.id} movieData={movie} />\n          ))}\n        </ul>\n      ) : (\n        <p>No results found!</p>\n      )}\n    </>\n  );\n}\n\nMoviesList.propTypes = { moviesData: PropTypes.object.isRequired };\n\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport React from 'react';\nimport { useState } from 'react';\nimport { fetchMovieByQuery } from '../api/fetchFromApi';\nimport { useSearchParams } from 'react-router-dom';\n\nfunction MoviesPage() {\n  const [searchResult, setSearchResult] = useState(null);\n  const [searchParams, setSerachParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const inputQuery = event.target.input.value;\n    if (inputQuery === null || inputQuery.match(/^ *$/) !== null) {\n      return alert('Type in something!');\n    }\n    setSerachParams({ query: inputQuery });\n    fetchMovieByQuery(query)\n      .then(response => {\n        setSearchResult(response);\n      })\n      .finally(event.currentTarget.reset());\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input name=\"input\" />\n      </form>\n      {searchResult && <MoviesList moviesData={searchResult} />}\n    </>\n  );\n}\n\nexport default MoviesPage;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","API_KEY","fetchTrendingMovies","fetch","fetchedData","json","response","fetchMovieById","movieId","fetchMovieReviewsById","fetchMovieCastById","fetchMovieByQuery","query","movieData","backdrop_path","title","id","imageUrl","to","src","alt","movies","moviesData","results","length","map","movie","useState","searchResult","setSearchResult","useSearchParams","searchParams","setSerachParams","get","onSubmit","event","preventDefault","inputQuery","target","input","match","alert","finally","currentTarget","reset","name"],"sourceRoot":""}