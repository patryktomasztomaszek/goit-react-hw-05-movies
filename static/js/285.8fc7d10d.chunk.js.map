{"version":3,"file":"static/js/285.8fc7d10d.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACqBC,MAAM,GAAD,OAC1BH,EAD0B,sCACYC,IAFtC,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,oBACUP,IAFpC,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCD,GAArC,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,4BACkBP,IAF5C,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCF,GAAlC,yFACqBL,MAAM,GAAD,OAC1BH,EAD0B,iBACTQ,EADS,4BACkBP,IAF5C,cACCG,EADD,gBAIkBA,EAAYC,OAJ9B,cAICC,EAJD,yBAKEA,GALF,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gFAELC,QAAQC,IAAIC,EAAAA,EAAAA,IAAA,UAAaf,EAAb,iCAA8CC,EAA9C,kBAA+DW,KAFtE,SAGqBG,EAAAA,EAAAA,IAAA,UAAaf,EAAb,iCAA8CC,EAA9C,kBAA+DW,IAHpF,cAGCR,EAHD,OAINS,QAAQC,IAAIV,EAAYY,MAJlB,SAKkBZ,EAAYY,KAL9B,cAKCV,EALD,yBAaEA,GAbF,kE,oHCVP,MAzBA,YAAyC,IACjCW,EADgC,EAAfC,YACKC,QAC5B,OACE,8BACGF,EAAQG,OAAS,GAChB,wBACGH,EAAQI,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QAEpB,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EAKZ,OAGH,8CAIP,ECJD,MAfA,WACE,OAAgDG,EAAAA,EAAAA,UAAS,MAAzD,eAAOC,EAAP,KAAyBC,EAAzB,KACQpB,GAAYqB,EAAAA,EAAAA,MAAZrB,QAQR,OANAsB,EAAAA,EAAAA,YAAU,YACRrB,EAAAA,EAAAA,IAAsBD,GAASuB,MAAK,SAAAzB,GAAQ,OAC1CsB,EAAoBtB,EADsB,GAG7C,GAAE,CAACE,KAGF,8BAAGmB,IAAoB,SAAC,EAAD,CAAeT,YAAaS,KAEtD,C","sources":["api/fetchFromApi.js","components/ReviewsRender/ReviewsRender.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2f202abcab3fe0934220a17698275697';\n\nexport async function fetchTrendingMovies() {\n  const fetchedData = await fetch(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieReviewsById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieCastById(movieId) {\n  const fetchedData = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const response = await fetchedData.json();\n  return response;\n}\n\nexport async function fetchMovieByQuery(query) {\n\n  console.log(axios.get(`${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`))\n  const fetchedData = await axios.get(`${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`)\n console.log(fetchedData.data);\n  const response = await fetchedData.data\n\n  // const fetchedData = await fetch(\n  //   `${BASE_URL}search/movie/?api_key=${API_KEY}&query=${query}`\n  // );\n  // console.log(fetchedData);\n  // const response = await fetchedData.json();\n  // console.log(response)\n  return response;\n}\n","import React from 'react';\n\nfunction ReviewsRender({ reviewsData }) {\n  const reviews = reviewsData.results;\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => {\n            const { id, author, content } = review;\n\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>No reviews found!</p>\n      )}\n    </>\n  );\n}\n\n\nexport default ReviewsRender;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviewsById } from 'api/fetchFromApi';\nimport ReviewsRender from 'components/ReviewsRender/ReviewsRender';\n\nfunction Reviews() {\n  const [movieReviewsData, setMovieReviewsData] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviewsById(movieId).then(response =>\n      setMovieReviewsData(response)\n    );\n  }, [movieId]);\n\n  return (\n    <>{movieReviewsData && <ReviewsRender reviewsData={movieReviewsData} />}</>\n  );\n}\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","fetch","fetchedData","json","response","fetchMovieById","movieId","fetchMovieReviewsById","fetchMovieCastById","fetchMovieByQuery","query","console","log","axios","data","reviews","reviewsData","results","length","map","review","id","author","content","useState","movieReviewsData","setMovieReviewsData","useParams","useEffect","then"],"sourceRoot":""}